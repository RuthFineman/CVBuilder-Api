// <auto-generated />
using System;
using CVBuilder.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CVBuilder.Data.Migrations
{
    [DbContext(typeof(CVBuilderDbContext))]
    [Migration("20250403184242_dbfinal8")]
    partial class dbfinal8
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CVBuilder.Core.Models.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "degree");

                    b.Property<int?>("FileCVId")
                        .HasColumnType("int");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "institution");

                    b.HasKey("Id");

                    b.HasIndex("FileCVId");

                    b.ToTable("Educations");

                    b.HasAnnotation("Relational:JsonPropertyName", "educations");
                });

            modelBuilder.Entity("CVBuilder.Core.Models.FileCV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "email");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "lastName");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "Phone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "role");

                    b.PrimitiveCollection<string>("Skills")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "skills");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "summary");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FileCVs");
                });

            modelBuilder.Entity("CVBuilder.Core.Models.Language", b =>
                {
                    b.Property<string>("LanguageName")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "languageName");

                    b.Property<int?>("FileCVId")
                        .HasColumnType("int");

                    b.Property<string>("Proficiency")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "proficiency");

                    b.HasKey("LanguageName");

                    b.HasIndex("FileCVId");

                    b.ToTable("Language");

                    b.HasAnnotation("Relational:JsonPropertyName", "languages");
                });

            modelBuilder.Entity("CVBuilder.Core.Models.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("CVBuilder.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CVBuilder.Core.Models.WorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "company");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "endDate");

                    b.Property<int?>("FileCVId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "position");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "startDate");

                    b.HasKey("Id");

                    b.HasIndex("FileCVId");

                    b.ToTable("WorkExperience");

                    b.HasAnnotation("Relational:JsonPropertyName", "workExperiences");
                });

            modelBuilder.Entity("CVBuilder.Core.Models.Education", b =>
                {
                    b.HasOne("CVBuilder.Core.Models.FileCV", null)
                        .WithMany("Educations")
                        .HasForeignKey("FileCVId");
                });

            modelBuilder.Entity("CVBuilder.Core.Models.FileCV", b =>
                {
                    b.HasOne("CVBuilder.Core.Models.User", "User")
                        .WithMany("CVFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CVBuilder.Core.Models.Language", b =>
                {
                    b.HasOne("CVBuilder.Core.Models.FileCV", null)
                        .WithMany("Languages")
                        .HasForeignKey("FileCVId");
                });

            modelBuilder.Entity("CVBuilder.Core.Models.WorkExperience", b =>
                {
                    b.HasOne("CVBuilder.Core.Models.FileCV", null)
                        .WithMany("WorkExperiences")
                        .HasForeignKey("FileCVId");
                });

            modelBuilder.Entity("CVBuilder.Core.Models.FileCV", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("Languages");

                    b.Navigation("WorkExperiences");
                });

            modelBuilder.Entity("CVBuilder.Core.Models.User", b =>
                {
                    b.Navigation("CVFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
